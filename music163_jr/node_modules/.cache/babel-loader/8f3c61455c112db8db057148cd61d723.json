{"ast":null,"code":"var _jsxFileName = \"/Users/jr/myWeb/React\\u9879\\u76EE\\u5B9E\\u6218/music163_jr/src/pages/discover/child-pages/recommend/c-cpns/top-banners/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { getTopBannersAction } from '../../store/actionCreator';\nimport { BannerWrapper, BannerLeft, BannerRight, BannerControl } from './style';\nimport { Carousel } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction TopBanners() {\n  _s();\n\n  console.log('TopBanner组件渲染了'); // 组件内state\n\n  const [currentIndex, setCurrentIndex] = useState(0); // redux Hook 组件和redux关联: 获取数据和进行操作\n\n  const dispatch = useDispatch();\n  const {\n    topBanners\n  } = useSelector(state => ({\n    topBanners: state.recommend.topBanners\n  }), shallowEqual);\n  const bannerRef = useRef();\n  useEffect(() => {\n    // 在组件渲染之后发送网络请求\n    dispatch(getTopBannersAction());\n  }, [dispatch]); // 其他的逻辑代码 memoize\n\n  const bgImage = topBanners && topBanners[currentIndex] && topBanners[currentIndex].imageUrl + '?imageView&blur=40x20';\n  return /*#__PURE__*/_jsxDEV(BannerWrapper, {\n    bgImage: bgImage,\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(BannerLeft, {\n        children: /*#__PURE__*/_jsxDEV(Carousel, {\n          effect: \"fade\",\n          autoplay: true,\n          ref: bannerRef,\n          beforeChange: (from, to) => {\n            setCurrentIndex(to);\n          },\n          children: topBanners && topBanners.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: item.imageUrl,\n              alt: item.typeTitle\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 33\n            }, this)\n          }, item.imageUrl, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BannerRight, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(BannerControl, {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => bannerRef.current.prev()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn\",\n          onClick: () => bannerRef.current.next()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TopBanners, \"PHYarvbkuM6aYxk8SG0Xp4vz2xI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = TopBanners;\nexport default TopBanners;\n\nvar _c;\n\n$RefreshReg$(_c, \"TopBanners\");","map":{"version":3,"sources":["/Users/jr/myWeb/React项目实战/music163_jr/src/pages/discover/child-pages/recommend/c-cpns/top-banners/index.js"],"names":["React","useEffect","useRef","useState","shallowEqual","useDispatch","useSelector","getTopBannersAction","BannerWrapper","BannerLeft","BannerRight","BannerControl","Carousel","TopBanners","console","log","currentIndex","setCurrentIndex","dispatch","topBanners","state","recommend","bannerRef","bgImage","imageUrl","from","to","map","item","typeTitle","current","prev","next"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,MAA3B,EAAmCC,QAAnC,QAAmD,OAAnD;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,WAApC,QAAuD,aAAvD;AACA,SAASC,mBAAT,QAAoC,2BAApC;AACA,SAAQC,aAAR,EAAsBC,UAAtB,EAAiCC,WAAjC,EAA6CC,aAA7C,QAAiE,SAAjE;AACA,SAAQC,QAAR,QAAuB,MAAvB;;;AAEA,SAASC,UAAT,GAAqB;AAAA;;AACjBC,EAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ,EADiB,CAGjB;;AACA,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCd,QAAQ,CAAC,CAAD,CAAhD,CAJiB,CAMjB;;AACA,QAAMe,QAAQ,GAAGb,WAAW,EAA5B;AACA,QAAM;AAAEc,IAAAA;AAAF,MAAiBb,WAAW,CAC9Bc,KAAK,KAAK;AACND,IAAAA,UAAU,EAACC,KAAK,CAACC,SAAN,CAAgBF;AADrB,GAAL,CADyB,EAI9Bf,YAJ8B,CAAlC;AAOA,QAAMkB,SAAS,GAAGpB,MAAM,EAAxB;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACZ;AACAiB,IAAAA,QAAQ,CAACX,mBAAmB,EAApB,CAAR;AACH,GAHQ,EAGP,CAACW,QAAD,CAHO,CAAT,CAjBiB,CAuBjB;;AACA,QAAMK,OAAO,GACbJ,UAAU,IACVA,UAAU,CAACH,YAAD,CADV,IAEAG,UAAU,CAACH,YAAD,CAAV,CAAyBQ,QAAzB,GAAoC,uBAHpC;AAKA,sBACI,QAAC,aAAD;AAAe,IAAA,OAAO,EAAED,OAAxB;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,8BACI,QAAC,UAAD;AAAA,+BACI,QAAC,QAAD;AACI,UAAA,MAAM,EAAC,MADX;AAEI,UAAA,QAAQ,EAAE,IAFd;AAGI,UAAA,GAAG,EAAED,SAHT;AAII,UAAA,YAAY,EAAE,CAACG,IAAD,EAAOC,EAAP,KAAc;AAACT,YAAAA,eAAe,CAACS,EAAD,CAAf;AAAoB,WAJrD;AAAA,oBAMKP,UAAU,IAAIA,UAAU,CAACQ,GAAX,CAAgBC,IAAD,iBAC1B;AAAA,mCACI;AAAK,cAAA,GAAG,EAAEA,IAAI,CAACJ,QAAf;AAAyB,cAAA,GAAG,EAAEI,IAAI,CAACC;AAAnC;AAAA;AAAA;AAAA;AAAA;AADJ,aAAUD,IAAI,CAACJ,QAAf;AAAA;AAAA;AAAA;AAAA,kBADW;AANnB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ,eAeI,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAfJ,eAgBI,QAAC,aAAD;AAAA,gCACI;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAwB,UAAA,OAAO,EAAE,MAAMF,SAAS,CAACQ,OAAV,CAAkBC,IAAlB;AAAvC;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAQ,UAAA,SAAS,EAAC,KAAlB;AAAwB,UAAA,OAAO,EAAE,MAAMT,SAAS,CAACQ,OAAV,CAAkBE,IAAlB;AAAvC;AAAA;AAAA;AAAA;AAAA,gBAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAhBJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAyBH;;GAtDQnB,U;UAOYR,W,EACMC,W;;;KARlBO,U;AAwDT,eAAeA,UAAf","sourcesContent":["import React, { useEffect, useRef, useState } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport { getTopBannersAction } from '../../store/actionCreator'\nimport {BannerWrapper,BannerLeft,BannerRight,BannerControl} from './style';\nimport {Carousel} from 'antd';\n\nfunction TopBanners(){\n    console.log('TopBanner组件渲染了');\n\n    // 组件内state\n    const [currentIndex, setCurrentIndex] = useState(0)\n\n    // redux Hook 组件和redux关联: 获取数据和进行操作\n    const dispatch = useDispatch()\n    const { topBanners } = useSelector(\n        state => ({\n            topBanners:state.recommend.topBanners\n        }),\n        shallowEqual\n    )\n\n    const bannerRef = useRef()\n\n    useEffect(() => {\n        // 在组件渲染之后发送网络请求\n        dispatch(getTopBannersAction())\n    },[dispatch])\n    \n    \n    // 其他的逻辑代码 memoize\n    const bgImage =\n    topBanners &&\n    topBanners[currentIndex] &&\n    topBanners[currentIndex].imageUrl + '?imageView&blur=40x20'\n\n    return (\n        <BannerWrapper bgImage={bgImage}>\n            <div className='content'>\n                <BannerLeft>\n                    <Carousel\n                        effect=\"fade\"\n                        autoplay={true}\n                        ref={bannerRef}\n                        beforeChange={(from, to) => {setCurrentIndex(to)}}\n                    >\n                        {topBanners && topBanners.map((item)=>(\n                            <div key={item.imageUrl}>\n                                <img src={item.imageUrl} alt={item.typeTitle}/>\n                            </div>\n                        ))}\n                    </Carousel>\n                </BannerLeft>\n                <BannerRight/>\n                <BannerControl>\n                    <button className=\"btn\" onClick={() => bannerRef.current.prev()}></button>\n                    <button className=\"btn\" onClick={() => bannerRef.current.next()}></button>\n                </BannerControl>\n            </div>\n        </BannerWrapper>\n    );\n}\n\nexport default TopBanners;"]},"metadata":{},"sourceType":"module"}