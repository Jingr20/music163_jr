{"ast":null,"code":"var _jsxFileName = \"/Users/jr/myWeb/React\\u9879\\u76EE\\u5B9E\\u6218/music163_jr/src/pages/discover/child-pages/album/c-cpns/song-item/index.js\",\n    _s = $RefreshSig$();\n\nimport { useDispatch } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom'; // import { useAddPlaylist } from '@/hooks/change-music'\n\nimport { getSizeImage } from '@/utils/format-utils.js';\nimport { getSongDetailAction, changeIsPlayingAction } from '@/pages/player/store/actionCreator';\nimport { SongItemWrapper } from './style';\nimport { PlayCircleOutlined } from '@ant-design/icons';\nimport { message } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SongItem(props) {\n  _s();\n\n  // 父组件传递的数据\n  const {\n    currentRanking,\n    coverPic,\n    duration,\n    singer,\n    songId,\n    songName,\n    className = ''\n  } = props; // 获取store中的数据\n  // const {playlist} = useSelector(state => ({\n  //     playlist: state.player.playlist\n  // }), shallowEqual)\n\n  const dispatch = useDispatch();\n  /*************** 播放音乐 *************/\n\n  async function playMusic(e, isTo = false) {\n    // 如果不跳转,阻止超链接的默认行为\n    if (!isTo) e.preventDefault();\n    await dispatch(getSongDetailAction(songId)); // 播放音乐\n\n    dispatch(changeIsPlayingAction(true));\n  }\n  /*************** 往播放列表里添加数据 *************/\n  // const addPlaylist = useAddPlaylist(playlist, message)\n\n\n  return /*#__PURE__*/_jsxDEV(SongItemWrapper, {\n    className: className,\n    isPic: coverPic,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-item rank-count\",\n      children: currentRanking\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }, this), coverPic && /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/discover/song\",\n      className: \"song-item\",\n      onClick: e => playMusic(e),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: getSizeImage(coverPic, 50),\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-item song-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-info\",\n        children: [/*#__PURE__*/_jsxDEV(PlayCircleOutlined, {\n          className: \"font-active\",\n          onClick: e => playMusic(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/play\",\n          onClick: e => playMusic(e),\n          className: \"text-nowrap\",\n          children: songName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-operator\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sprite_icon2 btn addto\" // onClick={e => addPlaylist(e,songId)}\n          ,\n          onClick: () => message.warn('暂未开通')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-item duration\",\n      children: duration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/discover/song\",\n      className: \"song-item singer\" // onClick={(e) => playMusic(e)}\n      ,\n      onClick: () => message.warn('暂无歌手详情页面'),\n      children: singer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SongItem, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SongItem;\nSongItem.propTypes = {\n  currentRanking: propTypes.number.isRequired,\n  coverPic: propTypes.string,\n  duration: propTypes.string.isRequired,\n  singer: propTypes.string.isRequired,\n  songId: propTypes.number.isRequired,\n  className: propTypes.string,\n  songName: propTypes.string.isRequired\n};\nexport default SongItem;\n\nvar _c;\n\n$RefreshReg$(_c, \"SongItem\");","map":{"version":3,"sources":["/Users/jr/myWeb/React项目实战/music163_jr/src/pages/discover/child-pages/album/c-cpns/song-item/index.js"],"names":["useDispatch","propTypes","NavLink","getSizeImage","getSongDetailAction","changeIsPlayingAction","SongItemWrapper","PlayCircleOutlined","message","SongItem","props","currentRanking","coverPic","duration","singer","songId","songName","className","dispatch","playMusic","e","isTo","preventDefault","warn","number","isRequired","string"],"mappings":"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","sourcesContent":["import {useDispatch} from 'react-redux';\nimport propTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom';\n// import { useAddPlaylist } from '@/hooks/change-music'\nimport { getSizeImage } from '@/utils/format-utils.js';\nimport { getSongDetailAction,changeIsPlayingAction } from '@/pages/player/store/actionCreator';\nimport { SongItemWrapper } from './style';\nimport { PlayCircleOutlined } from '@ant-design/icons';\nimport { message } from 'antd';\n\nfunction SongItem(props) {\n    // 父组件传递的数据\n    const {\n        currentRanking,\n        coverPic,\n        duration,\n        singer,\n        songId,\n        songName,\n        className = '',\n    } = props\n\n    // 获取store中的数据\n    // const {playlist} = useSelector(state => ({\n    //     playlist: state.player.playlist\n    // }), shallowEqual)\n\n    const dispatch = useDispatch()\n\n\n\n    /*************** 播放音乐 *************/\n    async function playMusic(e, isTo = false){\n        // 如果不跳转,阻止超链接的默认行为\n        if (!isTo) e.preventDefault()\n        await dispatch(getSongDetailAction(songId))\n        // 播放音乐\n        dispatch(changeIsPlayingAction(true))\n    }\n\n    /*************** 往播放列表里添加数据 *************/\n    // const addPlaylist = useAddPlaylist(playlist, message)\n\n\n  return (\n    <SongItemWrapper className={className} isPic={coverPic}>\n        {/* 排名 */}\n        <div className=\"song-item rank-count\">{currentRanking}</div>\n        {/* 歌曲图片 */}\n        {coverPic && (\n        <NavLink\n          to=\"/discover/song\"\n          className=\"song-item\"\n          onClick={(e) => playMusic(e)}\n        >\n            <img src={getSizeImage(coverPic, 50)} alt=\"\" />\n        </NavLink>\n        )}\n        <div className=\"song-item song-info\">\n            <div className=\"left-info\">\n                {/* 播放图标 */}\n                <PlayCircleOutlined className=\"font-active\" onClick={(e) => playMusic(e)}/>\n                {/* 歌曲名称 */}\n                <a href=\"/play\" onClick={(e) => playMusic(e)} className=\"text-nowrap\">\n                    {songName}\n                </a>\n            </div>\n            {/* 加入图标 */}\n            <div className=\"right-operator\">\n                <button className=\"sprite_icon2 btn addto\"\n                    // onClick={e => addPlaylist(e,songId)}\n                    onClick={()=> message.warn('暂未开通')}\n                ></button>\n            </div>\n        </div>\n        {/* 时长 */}\n        <div className=\"song-item duration\">{duration}</div>\n        <NavLink\n            to=\"/discover/song\"\n            className=\"song-item singer\"\n            // onClick={(e) => playMusic(e)}\n            onClick={()=> message.warn('暂无歌手详情页面')}\n        >\n            {singer}\n        </NavLink>\n    </SongItemWrapper>\n  )\n}\n\nSongItem.propTypes = {\n  currentRanking: propTypes.number.isRequired,\n  coverPic: propTypes.string,\n  duration: propTypes.string.isRequired,\n  singer: propTypes.string.isRequired,\n  songId: propTypes.number.isRequired,\n  className: propTypes.string,\n  songName: propTypes.string.isRequired,\n}\n\nexport default SongItem;\n"]},"metadata":{},"sourceType":"module"}