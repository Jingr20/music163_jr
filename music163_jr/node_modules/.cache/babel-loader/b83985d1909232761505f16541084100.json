{"ast":null,"code":"var _jsxFileName = \"/Users/jr/myWeb/React\\u9879\\u76EE\\u5B9E\\u6218/music163_jr/src/pages/player/app-player-bar/index.js\",\n    _s = $RefreshSig$();\n\nimport { PlayerbarWrapper, PlayerInfo, Control, Operator } from './style';\nimport { Slider, Tooltip } from 'antd';\nimport { useDispatch, useSelector, shallowEqual } from 'react-redux';\nimport { useEffect, useState, useRef } from 'react';\nimport { getSongDetailAction } from '../store/actionCreator';\nimport { getSizeImage, formatDate, getPlayUrl } from '@/utils/format-utils.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AppPlayerBar() {\n  _s();\n\n  //发送网络请求，请求歌曲详情\n  const dispatch = useDispatch();\n  useEffect(() => {\n    console.log('请求歌曲详情');\n    dispatch(getSongDetailAction(167874));\n  }, [dispatch]); // 获取store中的数据\n\n  const {\n    currentSong\n  } = useSelector(state => ({\n    currentSong: state.player.currentSong\n  }), shallowEqual); // other handle\n\n  const picUrl = currentSong.al && currentSong.al.picUrl; // 图片url\n\n  const songName = currentSong.name; // 歌曲名字\n\n  const singerName = currentSong.ar && currentSong.ar[0].name; //作者名字\n\n  const duration = currentSong.dt; //播放总时间\n  // 组件内state\n\n  const [isPlaying, setIsPlaying] = useState(false); // 是否正在播放\n\n  const audioRef = useRef();\n  /***** 点击播放/暂停音乐 ****/\n\n  function playMusic() {\n    // 更改状态\n    setIsPlaying(!isPlaying);\n    isPlaying ? audioRef.current.pause() : audioRef.current.play();\n  }\n  /***** 设置音频的src ****/\n\n\n  useEffect(() => {\n    audioRef.current.src = currentSong.id && getPlayUrl(currentSong.id); // 设置音量\n\n    audioRef.current.volume = 0.3;\n  }, [currentSong]);\n  return /*#__PURE__*/_jsxDEV(PlayerbarWrapper, {\n    className: \"sprite_player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"content\",\n      children: [/*#__PURE__*/_jsxDEV(Control, {\n        isPlaying: false,\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sprite_player pre\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sprite_player play\",\n          onClick: playMusic\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"sprite_player next\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PlayerInfo, {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"#/discover/song\",\n          className: \"image\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: getSizeImage(picUrl, 35),\n            alt: \"\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"play-detail\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"song-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"song-name\",\n              href: \"#/discover/song\",\n              children: songName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n              className: \"song-author\",\n              href: \"#/author\",\n              children: singerName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Slider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"song-time\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"now-time\",\n              children: \"XXX\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"total-time\",\n              children: [' ', \"/ \", duration && formatDate(duration, 'mm:ss')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Operator, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"right\",\n          children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"\\u8C03\\u8282\\u97F3\\u91CF\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"sprite_player btn volume\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: ['顺序播放', '随机播放', '单曲循环'].filter((item, index) => index === 0),\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"sprite_player btn loop\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: \"\\u64AD\\u653E\\u5217\\u8868\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"sprite_player btn playlist\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      id: \"audio\",\n      ref: audioRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n\n_s(AppPlayerBar, \"G19vV8IjigKHKUmJKzcO7XBGCEg=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AppPlayerBar;\nexport default AppPlayerBar;\n\nvar _c;\n\n$RefreshReg$(_c, \"AppPlayerBar\");","map":{"version":3,"sources":["/Users/jr/myWeb/React项目实战/music163_jr/src/pages/player/app-player-bar/index.js"],"names":["PlayerbarWrapper","PlayerInfo","Control","Operator","Slider","Tooltip","useDispatch","useSelector","shallowEqual","useEffect","useState","useRef","getSongDetailAction","getSizeImage","formatDate","getPlayUrl","AppPlayerBar","dispatch","console","log","currentSong","state","player","picUrl","al","songName","name","singerName","ar","duration","dt","isPlaying","setIsPlaying","audioRef","playMusic","current","pause","play","src","id","volume","filter","item","index"],"mappings":"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","sourcesContent":["import {PlayerbarWrapper,PlayerInfo,Control,Operator} from './style';\nimport {Slider,Tooltip} from 'antd';\nimport {useDispatch,useSelector,shallowEqual} from 'react-redux';\nimport {useEffect,useState,useRef} from 'react';\nimport {getSongDetailAction} from '../store/actionCreator';\nimport {getSizeImage, formatDate,getPlayUrl} from '@/utils/format-utils.js';\n\nfunction AppPlayerBar(){\n\n    //发送网络请求，请求歌曲详情\n    const dispatch = useDispatch();\n    useEffect(()=>{\n        console.log('请求歌曲详情');\n        dispatch(getSongDetailAction(167874));\n    },[dispatch]);\n\n    // 获取store中的数据\n    const {currentSong} = useSelector((state)=>({\n        currentSong:state.player.currentSong\n    }),shallowEqual); \n\n    // other handle\n    const picUrl = currentSong.al && currentSong.al.picUrl; // 图片url\n    const songName = currentSong.name; // 歌曲名字\n    const singerName = currentSong.ar && currentSong.ar[0].name; //作者名字\n    const duration = currentSong.dt; //播放总时间\n\n    // 组件内state\n    const [isPlaying,setIsPlaying] = useState(false); // 是否正在播放\n    const audioRef = useRef();\n\n    /***** 点击播放/暂停音乐 ****/\n    function playMusic(){\n        // 更改状态\n        setIsPlaying(!isPlaying);\n        isPlaying ? audioRef.current.pause() : audioRef.current.play();\n    }\n\n    /***** 设置音频的src ****/\n    useEffect(()=>{\n        audioRef.current.src = currentSong.id && getPlayUrl(currentSong.id);\n        // 设置音量\n        audioRef.current.volume = 0.3;\n    },[currentSong])\n\n    return (\n        <PlayerbarWrapper className='sprite_player'>\n            <div className='content'>\n                <Control isPlaying={false}>\n                    <button className='sprite_player pre'></button>\n                    <button className='sprite_player play' onClick={playMusic}></button>\n                    <button className='sprite_player next'></button>\n                </Control>\n                <PlayerInfo>\n                    <a href='#/discover/song' className='image'>\n                        <img src={getSizeImage(picUrl, 35)} alt=''/>\n                    </a>\n                    <div className='play-detail'>\n                        <div className='song-info'>\n                            <a className='song-name' href='#/discover/song'>{songName}</a>\n                            <a className='song-author' href='#/author'>{singerName}</a>\n                        </div>\n                        <Slider/>\n                        <div className='song-time'>\n                            <span className='now-time'>XXX</span>\n                            <span className='total-time'>\n                                {' '}\n                                / {duration && formatDate(duration, 'mm:ss')}\n                            </span>\n                        </div>\n                    </div>\n                </PlayerInfo>\n                <Operator>\n                    {/* 左侧暂时不实现 */}\n                    <div className='left'></div>\n                    <div className='right'>\n                        <Tooltip title='调节音量'>\n                            <button className='sprite_player btn volume'></button>\n                        </Tooltip>\n                        <Tooltip\n                            title={['顺序播放','随机播放','单曲循环'].filter((item,index)=>(\n                                index === 0\n                            ))}\n                        >\n                            <button className='sprite_player btn loop'></button>\n                        </Tooltip>\n                        <Tooltip title='播放列表'>\n                            <button className='sprite_player btn playlist'>\n                                <span>9</span>\n                            </button>\n                        </Tooltip>\n                    </div>\n                </Operator>\n            </div>\n            <audio\n                id=\"audio\"\n                ref={audioRef}\n            />\n        </PlayerbarWrapper>\n    );\n}\n\nexport default AppPlayerBar;"]},"metadata":{},"sourceType":"module"}