{"ast":null,"code":"var _jsxFileName = \"/Users/jr/myWeb/React\\u9879\\u76EE\\u5B9E\\u6218/music163_jr/src/pages/discover/child-pages/album/c-cpns/song-item/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { memo } from 'react';\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux';\nimport propTypes from 'prop-types';\nimport { NavLink } from 'react-router-dom'; // import { useAddPlaylist } from '@/hooks/change-music'\n\nimport { getSizeImage } from '@/utils/format-utils.js';\nimport { getSongDetailAction } from '@/pages/player/store/actionCreator';\nimport { SongItemWrapper } from './style';\nimport { PlayCircleOutlined } from '@ant-design/icons';\nimport { message } from 'antd';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction SongItem(props) {\n  _s();\n\n  // 父组件传递的数据\n  const {\n    currentRanking,\n    coverPic,\n    duration,\n    singer,\n    songId,\n    songName,\n    className = ''\n  } = props; // redux hook\n\n  const dispatch = useDispatch(); //   const {playlist} = useSelector(state => ({\n  //     playlist: state.getIn(['player', 'playList'])\n  //   }), shallowEqual)\n  // other function\n\n  const playMusic = (e, isTo = false) => {\n    // 如果不跳转,那么组织超链接的默认行为\n    if (!isTo) e.preventDefault();\n    dispatch(getSongDetailAction(songId)); // 播放音乐\n\n    document.getElementById('audio').autoplay = true;\n  }; //   const addPlaylist = useAddPlaylist(playlist, message)\n\n\n  return /*#__PURE__*/_jsxDEV(SongItemWrapper, {\n    className: className,\n    isPic: coverPic,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-item rank-count\",\n      children: currentRanking\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), coverPic && /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/discover/song\",\n      className: \"song-item\",\n      onClick: e => playMusic(e, true),\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: getSizeImage(coverPic, 50),\n        alt: \"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-item song-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"left-info\",\n        children: [/*#__PURE__*/_jsxDEV(PlayCircleOutlined, {\n          className: \"font-active\",\n          onClick: e => playMusic(e)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          href: \"/play\",\n          onClick: e => playMusic(e),\n          className: \"text-nowrap\",\n          children: songName\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"right-operator\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          href: \"/discover/recommend\",\n          className: \"sprite_icon2 btn addto\" // onClick={e => addPlaylist(e,songId)}\n\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-item duration\",\n      children: duration\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(NavLink, {\n      to: \"/discover/song\",\n      className: \"song-item singer\",\n      onClick: e => playMusic(e, true),\n      children: singer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SongItem, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = SongItem;\nSongItem.propTypes = {\n  currentRanking: propTypes.number.isRequired,\n  coverPic: propTypes.string,\n  duration: propTypes.string.isRequired,\n  singer: propTypes.string.isRequired,\n  songId: propTypes.number.isRequired,\n  className: propTypes.string,\n  songName: propTypes.string.isRequired\n};\nexport default _c2 = /*#__PURE__*/memo(SongItem);\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"SongItem\");\n$RefreshReg$(_c2, \"%default%\");","map":{"version":3,"sources":["/Users/jr/myWeb/React项目实战/music163_jr/src/pages/discover/child-pages/album/c-cpns/song-item/index.js"],"names":["React","memo","shallowEqual","useDispatch","useSelector","propTypes","NavLink","getSizeImage","getSongDetailAction","SongItemWrapper","PlayCircleOutlined","message","SongItem","props","currentRanking","coverPic","duration","singer","songId","songName","className","dispatch","playMusic","e","isTo","preventDefault","document","getElementById","autoplay","number","isRequired","string"],"mappings":"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","sourcesContent":["import React, { memo } from 'react'\nimport { shallowEqual, useDispatch, useSelector } from 'react-redux'\nimport propTypes from 'prop-types'\nimport { NavLink } from 'react-router-dom'\n// import { useAddPlaylist } from '@/hooks/change-music'\n\nimport { getSizeImage } from '@/utils/format-utils.js'\nimport { getSongDetailAction } from '@/pages/player/store/actionCreator'\nimport { SongItemWrapper } from './style'\nimport { PlayCircleOutlined } from '@ant-design/icons'\nimport { message } from 'antd';\n\nfunction SongItem(props) {\n    // 父组件传递的数据\n    const {\n        currentRanking,\n        coverPic,\n        duration,\n        singer,\n        songId,\n        songName,\n        className = '',\n    } = props\n\n  // redux hook\n  const dispatch = useDispatch()\n//   const {playlist} = useSelector(state => ({\n//     playlist: state.getIn(['player', 'playList'])\n//   }), shallowEqual)\n\n  // other function\n  const playMusic = (e, isTo = false) => {\n    // 如果不跳转,那么组织超链接的默认行为\n    if (!isTo) e.preventDefault()\n    dispatch(getSongDetailAction(songId))\n    // 播放音乐\n    document.getElementById('audio').autoplay = true\n  }\n//   const addPlaylist = useAddPlaylist(playlist, message)\n\n  return (\n    <SongItemWrapper className={className} isPic={coverPic}>\n      <div className=\"song-item rank-count\">{currentRanking}</div>\n      {coverPic && (\n        <NavLink\n          to=\"/discover/song\"\n          className=\"song-item\"\n          onClick={(e) => playMusic(e, true)}\n        >\n          <img src={getSizeImage(coverPic, 50)} alt=\"\" />\n        </NavLink>\n      )}\n      <div className=\"song-item song-info\">\n        <div className=\"left-info\">\n          <PlayCircleOutlined\n            className=\"font-active\"\n            onClick={(e) => playMusic(e)}\n          />\n          <a href=\"/play\" onClick={(e) => playMusic(e)} className=\"text-nowrap\">\n            {songName}\n          </a>\n        </div>\n        <div className=\"right-operator\">\n          <button\n            href=\"/discover/recommend\"\n            className=\"sprite_icon2 btn addto\"\n            // onClick={e => addPlaylist(e,songId)}\n          ></button>\n        </div>\n      </div>\n      <div className=\"song-item duration\">{duration}</div>\n      <NavLink\n        to=\"/discover/song\"\n        className=\"song-item singer\"\n        onClick={(e) => playMusic(e, true)}\n      >\n        {singer}\n      </NavLink>\n    </SongItemWrapper>\n  )\n}\n\nSongItem.propTypes = {\n  currentRanking: propTypes.number.isRequired,\n  coverPic: propTypes.string,\n  duration: propTypes.string.isRequired,\n  singer: propTypes.string.isRequired,\n  songId: propTypes.number.isRequired,\n  className: propTypes.string,\n  songName: propTypes.string.isRequired,\n}\n\nexport default memo(SongItem)\n"]},"metadata":{},"sourceType":"module"}