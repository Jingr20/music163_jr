{"ast":null,"code":"import axios from 'axios';\nimport { BASE_URL, TIMEOUT } from './config';\nconst instance = axios.create({\n  // 默认的配置\n  baseURL: BASE_URL,\n  // -> http://123.57.176.198:3000/banner\n  timeout: TIMEOUT,\n  // -> 5000\n  headers: {}\n});\ninstance.interceptors.request.use( // 请求拦截\nconfig => {\n  return config;\n}, err => {});\ninstance.interceptors.response.use( // 响应拦截\nres => {\n  return res.data;\n}, err => {\n  if (err && err.response) {\n    switch (err.response.status) {\n      case 400:\n        console.log('请求错误');\n        break;\n\n      case 401:\n        console.log('未授权访问');\n        break;\n\n      default:\n        console.log('其他错误信息');\n    }\n  }\n\n  return err;\n});\nexport default instance;","map":{"version":3,"sources":["/Users/jr/myWeb/React项目实战/music163_jr/src/service/request.js"],"names":["axios","BASE_URL","TIMEOUT","instance","create","baseURL","timeout","headers","interceptors","request","use","config","err","response","res","data","status","console","log"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,UAAlC;AAEA,MAAMC,QAAQ,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC5B;AACAC,EAAAA,OAAO,EAAEJ,QAFmB;AAET;AACnBK,EAAAA,OAAO,EAAEJ,OAHmB;AAGV;AAClBK,EAAAA,OAAO,EAAE;AAJmB,CAAb,CAAjB;AAOAJ,QAAQ,CAACK,YAAT,CAAsBC,OAAtB,CAA8BC,GAA9B,EACE;AACCC,MAAD,IAAY;AACV,SAAOA,MAAP;AACD,CAJH,EAKGC,GAAD,IAAS,CAAE,CALb;AAQAT,QAAQ,CAACK,YAAT,CAAsBK,QAAtB,CAA+BH,GAA/B,EACE;AACCI,GAAD,IAAS;AACP,SAAOA,GAAG,CAACC,IAAX;AACD,CAJH,EAKGH,GAAD,IAAS;AACP,MAAIA,GAAG,IAAIA,GAAG,CAACC,QAAf,EAAyB;AACvB,YAAQD,GAAG,CAACC,QAAJ,CAAaG,MAArB;AACE,WAAK,GAAL;AACEC,QAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA;;AACF,WAAK,GAAL;AACED,QAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA;;AACF;AACED,QAAAA,OAAO,CAACC,GAAR,CAAY,QAAZ;AARJ;AAUD;;AACD,SAAON,GAAP;AACD,CAnBH;AAsBA,eAAeT,QAAf","sourcesContent":["import axios from 'axios'\nimport { BASE_URL, TIMEOUT } from './config'\n\nconst instance = axios.create({\n  // 默认的配置\n  baseURL: BASE_URL, // -> http://123.57.176.198:3000/banner\n  timeout: TIMEOUT, // -> 5000\n  headers: {}\n})\n\ninstance.interceptors.request.use(\n  // 请求拦截\n  (config) => {\n    return config\n  },\n  (err) => {}\n)\n\ninstance.interceptors.response.use(\n  // 响应拦截\n  (res) => {\n    return res.data\n  },\n  (err) => {\n    if (err && err.response) {\n      switch (err.response.status) {\n        case 400:\n          console.log('请求错误')\n          break\n        case 401:\n          console.log('未授权访问')\n          break\n        default:\n          console.log('其他错误信息')\n      }\n    }\n    return err\n  }\n)\n\nexport default instance\n"]},"metadata":{},"sourceType":"module"}