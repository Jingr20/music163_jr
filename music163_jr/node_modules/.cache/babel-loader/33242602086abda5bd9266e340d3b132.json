{"ast":null,"code":"import { gotoPhoneLogin } from '@/service/login';\nimport * as actionTypes from './actionTypes';\nimport md5 from 'js-md5';\nimport { message } from 'antd';\nimport loginInfo from '@/config/token'; // 更改登录框显示\n\nexport const changeIsVisible = res => ({\n  type: actionTypes.CHANGE_IS_VISIBLE_STATE,\n  isVisible: res\n}); // 更改登录状态\n\nexport const changeUserLoginState = res => ({\n  type: actionTypes.CHANGE_USER_LOGIN_STATE,\n  isLogin: res\n}); // 更改登录用户信息\n\nexport const changeUserProfile = res => ({\n  type: actionTypes.CHANGE_PROFILE_INFO,\n  profile: res\n}); // 更改登录状态(token)\n\nexport const changeUserLoginToken = res => ({\n  type: actionTypes.CHANGE_PROFILE_TOKEN,\n  token: res\n}); // 更改登录状态(cookie)\n\nexport const changeUserLoginCookie = res => ({\n  type: actionTypes.CHANGE_PROFILE_COOKIE,\n  cookie: res\n}); // 获取登录信息\n\nexport const getLoginProfileInfo = (username, password, tip) => {\n  return dispatch => {\n    gotoPhoneLogin(username, undefined, md5(password)).then(res => {\n      // gotoPhoneLogin(username,password).then((res)=>{\n      console.log(res);\n\n      if (res.code !== 200) {\n        message.error('账号或密码错误');\n      } else {\n        // 登录成功\n        document.cookie = res.cookie; // 保存用户信息\n\n        dispatch(changeUserProfile(res && res.profile)); // 更改登录状态\n\n        dispatch(changeUserLoginState(true));\n        dispatch(changeUserLoginToken(res.token));\n        dispatch(changeUserLoginCookie(res.cookie)); // 保存登录信息(以便于下次自动登录)\n\n        loginInfo.username = username;\n        loginInfo.password = password;\n      }\n    });\n  };\n};","map":{"version":3,"sources":["/Users/jr/myWeb/React项目实战/music163_jr/src/components/theme-login/store/actionCreator.js"],"names":["gotoPhoneLogin","actionTypes","md5","message","loginInfo","changeIsVisible","res","type","CHANGE_IS_VISIBLE_STATE","isVisible","changeUserLoginState","CHANGE_USER_LOGIN_STATE","isLogin","changeUserProfile","CHANGE_PROFILE_INFO","profile","changeUserLoginToken","CHANGE_PROFILE_TOKEN","token","changeUserLoginCookie","CHANGE_PROFILE_COOKIE","cookie","getLoginProfileInfo","username","password","tip","dispatch","undefined","then","console","log","code","error","document"],"mappings":"AAAA,SAASA,cAAT,QAA+B,iBAA/B;AACA,OAAO,KAAKC,WAAZ,MAA6B,eAA7B;AACA,OAAOC,GAAP,MAAgB,QAAhB;AACA,SAAQC,OAAR,QAAsB,MAAtB;AACA,OAAOC,SAAP,MAAsB,gBAAtB,C,CAEA;;AACA,OAAO,MAAMC,eAAe,GAAGC,GAAG,KAAK;AACnCC,EAAAA,IAAI,EAACN,WAAW,CAACO,uBADkB;AAEnCC,EAAAA,SAAS,EAACH;AAFyB,CAAL,CAA3B,C,CAKP;;AACA,OAAO,MAAMI,oBAAoB,GAAGJ,GAAG,KAAK;AACxCC,EAAAA,IAAI,EAACN,WAAW,CAACU,uBADuB;AAExCC,EAAAA,OAAO,EAACN;AAFgC,CAAL,CAAhC,C,CAKP;;AACA,OAAO,MAAMO,iBAAiB,GAAGP,GAAG,KAAK;AACrCC,EAAAA,IAAI,EAAEN,WAAW,CAACa,mBADmB;AAErCC,EAAAA,OAAO,EAAET;AAF4B,CAAL,CAA7B,C,CAKP;;AACA,OAAO,MAAMU,oBAAoB,GAAGV,GAAG,KAAK;AACxCC,EAAAA,IAAI,EAAEN,WAAW,CAACgB,oBADsB;AAExCC,EAAAA,KAAK,EAACZ;AAFkC,CAAL,CAAhC,C,CAKP;;AACA,OAAO,MAAMa,qBAAqB,GAAGb,GAAG,KAAK;AACzCC,EAAAA,IAAI,EAAEN,WAAW,CAACmB,qBADuB;AAEzCC,EAAAA,MAAM,EAACf;AAFkC,CAAL,CAAjC,C,CAKP;;AACA,OAAO,MAAMgB,mBAAmB,GAAG,CAACC,QAAD,EAAWC,QAAX,EAAqBC,GAArB,KAA2B;AAC1D,SAAOC,QAAQ,IAAG;AACd1B,IAAAA,cAAc,CAACuB,QAAD,EAAUI,SAAV,EAAoBzB,GAAG,CAACsB,QAAD,CAAvB,CAAd,CAAiDI,IAAjD,CAAuDtB,GAAD,IAAO;AAC7D;AACIuB,MAAAA,OAAO,CAACC,GAAR,CAAYxB,GAAZ;;AACA,UAAGA,GAAG,CAACyB,IAAJ,KAAa,GAAhB,EAAoB;AAChB5B,QAAAA,OAAO,CAAC6B,KAAR,CAAc,SAAd;AACH,OAFD,MAEK;AACD;AACAC,QAAAA,QAAQ,CAACZ,MAAT,GAAkBf,GAAG,CAACe,MAAtB,CAFC,CAGD;;AACAK,QAAAA,QAAQ,CAACb,iBAAiB,CAACP,GAAG,IAAIA,GAAG,CAACS,OAAZ,CAAlB,CAAR,CAJC,CAKD;;AACAW,QAAAA,QAAQ,CAAChB,oBAAoB,CAAC,IAAD,CAArB,CAAR;AACAgB,QAAAA,QAAQ,CAACV,oBAAoB,CAACV,GAAG,CAACY,KAAL,CAArB,CAAR;AACAQ,QAAAA,QAAQ,CAACP,qBAAqB,CAACb,GAAG,CAACe,MAAL,CAAtB,CAAR,CARC,CAUD;;AACAjB,QAAAA,SAAS,CAACmB,QAAV,GAAqBA,QAArB;AACAnB,QAAAA,SAAS,CAACoB,QAAV,GAAqBA,QAArB;AAEH;AACJ,KApBD;AAqBH,GAtBD;AAuBH,CAxBM","sourcesContent":["import { gotoPhoneLogin } from '@/service/login';\nimport * as actionTypes from './actionTypes';\nimport md5 from 'js-md5';\nimport {message} from 'antd';\nimport loginInfo from '@/config/token';\n\n// 更改登录框显示\nexport const changeIsVisible = res => ({\n    type:actionTypes.CHANGE_IS_VISIBLE_STATE,\n    isVisible:res\n})\n\n// 更改登录状态\nexport const changeUserLoginState = res => ({\n    type:actionTypes.CHANGE_USER_LOGIN_STATE,\n    isLogin:res\n})\n\n// 更改登录用户信息\nexport const changeUserProfile = res => ({\n    type: actionTypes.CHANGE_PROFILE_INFO,\n    profile: res\n})\n\n// 更改登录状态(token)\nexport const changeUserLoginToken = res => ({\n    type: actionTypes.CHANGE_PROFILE_TOKEN,\n    token:res\n})\n\n// 更改登录状态(cookie)\nexport const changeUserLoginCookie = res => ({\n    type: actionTypes.CHANGE_PROFILE_COOKIE,\n    cookie:res\n})\n\n// 获取登录信息\nexport const getLoginProfileInfo = (username, password, tip)=>{\n    return dispatch =>{\n        gotoPhoneLogin(username,undefined,md5(password)).then((res)=>{\n        // gotoPhoneLogin(username,password).then((res)=>{\n            console.log(res);\n            if(res.code !== 200){\n                message.error('账号或密码错误')\n            }else{\n                // 登录成功\n                document.cookie = res.cookie;\n                // 保存用户信息\n                dispatch(changeUserProfile(res && res.profile));\n                // 更改登录状态\n                dispatch(changeUserLoginState(true))\n                dispatch(changeUserLoginToken(res.token))\n                dispatch(changeUserLoginCookie(res.cookie))\n\n                // 保存登录信息(以便于下次自动登录)\n                loginInfo.username = username;\n                loginInfo.password = password\n\n            }\n        });\n    }\n}\n  \n\n"]},"metadata":{},"sourceType":"module"}